// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: attachments.sql

package sqlc

import (
	"context"
)

const createAttachment = `-- name: CreateAttachment :exec
INSERT INTO attachments(
    filename,
    content_type,
    size_bytes,
    sha256,
    created_by
) VALUES (?, ?, ?, ?, ?)
`

type CreateAttachmentParams struct {
	Filename    string
	ContentType string
	SizeBytes   int64
	Sha256      []byte
	CreatedBy   int64
}

func (q *Queries) CreateAttachment(ctx context.Context, db DBTX, arg CreateAttachmentParams) error {
	_, err := db.ExecContext(ctx, createAttachment,
		arg.Filename,
		arg.ContentType,
		arg.SizeBytes,
		arg.Sha256,
		arg.CreatedBy,
	)
	return err
}

const createMemoAttachmentLink = `-- name: CreateMemoAttachmentLink :exec
INSERT INTO memo_attachments(
    memo_id,
    attachment_id
) VALUES (?, ?)
`

type CreateMemoAttachmentLinkParams struct {
	MemoID       int64
	AttachmentID int64
}

func (q *Queries) CreateMemoAttachmentLink(ctx context.Context, db DBTX, arg CreateMemoAttachmentLinkParams) error {
	_, err := db.ExecContext(ctx, createMemoAttachmentLink, arg.MemoID, arg.AttachmentID)
	return err
}

const deleteMemoAttachmentLink = `-- name: DeleteMemoAttachmentLink :exec
DELETE FROM memo_attachments WHERE attachment_id = ?
`

func (q *Queries) DeleteMemoAttachmentLink(ctx context.Context, db DBTX, attachmentID int64) error {
	_, err := db.ExecContext(ctx, deleteMemoAttachmentLink, attachmentID)
	return err
}

const deleteMemoAttachmentLinks = `-- name: DeleteMemoAttachmentLinks :exec
DELETE FROM memo_attachments WHERE memo_id = ?
`

func (q *Queries) DeleteMemoAttachmentLinks(ctx context.Context, db DBTX, memoID int64) error {
	_, err := db.ExecContext(ctx, deleteMemoAttachmentLinks, memoID)
	return err
}

const listAttachments = `-- name: ListAttachments :many
SELECT
    attachments.id, attachments.filename, attachments.filepath, attachments.content_type, attachments.size_bytes, attachments.sha256, attachments.created_by, attachments.created_at
FROM attachments
WHERE created_by = ? AND filename > ?
ORDER BY filename
LIMIT ?
`

type ListAttachmentsParams struct {
	CreatedBy int64
	Filename  string
	Limit     int64
}

func (q *Queries) ListAttachments(ctx context.Context, db DBTX, arg ListAttachmentsParams) ([]Attachment, error) {
	rows, err := db.QueryContext(ctx, listAttachments, arg.CreatedBy, arg.Filename, arg.Limit)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Attachment
	for rows.Next() {
		var i Attachment
		if err := rows.Scan(
			&i.ID,
			&i.Filename,
			&i.Filepath,
			&i.ContentType,
			&i.SizeBytes,
			&i.Sha256,
			&i.CreatedBy,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
