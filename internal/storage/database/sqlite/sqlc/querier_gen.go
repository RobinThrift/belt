// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package sqlc

import (
	"context"

	"github.com/RobinThrift/belt/internal/domain"
)

type Querier interface {
	ArchiveMemo(ctx context.Context, db DBTX, id domain.MemoID) (int64, error)
	CleanupDeletedMemos(ctx context.Context, db DBTX) (int64, error)
	CleanupTagsWithNoCount(ctx context.Context, db DBTX) error
	CleanupeMemoTagConnection(ctx context.Context, db DBTX, arg CleanupeMemoTagConnectionParams) ([]string, error)
	CountAccounts(ctx context.Context, db DBTX) (int64, error)
	CreateAccount(ctx context.Context, db DBTX, arg CreateAccountParams) error
	CreateAttachment(ctx context.Context, db DBTX, arg CreateAttachmentParams) error
	CreateLocalAuthAccount(ctx context.Context, db DBTX, arg CreateLocalAuthAccountParams) error
	CreateMemo(ctx context.Context, db DBTX, arg CreateMemoParams) (domain.MemoID, error)
	CreateMemoAttachmentLink(ctx context.Context, db DBTX, arg CreateMemoAttachmentLinkParams) error
	CreateMemoTagConnection(ctx context.Context, db DBTX, arg CreateMemoTagConnectionParams) error
	CreateSession(ctx context.Context, db DBTX, arg CreateSessionParams) error
	CreateTag(ctx context.Context, db DBTX, arg CreateTagParams) error
	DeleteExpired(ctx context.Context, db DBTX) error
	DeleteMemoAttachmentLink(ctx context.Context, db DBTX, attachmentID int64) error
	DeleteMemoAttachmentLinks(ctx context.Context, db DBTX, memoID int64) error
	DeleteMemoTagConnection(ctx context.Context, db DBTX, memoID int64) ([]string, error)
	DeleteSession(ctx context.Context, db DBTX, token string) error
	GetAccount(ctx context.Context, db DBTX, id int64) (Account, error)
	GetAccountByRef(ctx context.Context, db DBTX, authRef string) (Account, error)
	GetAccountByUsername(ctx context.Context, db DBTX, username string) (Account, error)
	GetLocalAuthAccountByUsername(ctx context.Context, db DBTX, username string) (LocalAuthAccount, error)
	GetMemo(ctx context.Context, db DBTX, id domain.MemoID) (Memo, error)
	GetSession(ctx context.Context, db DBTX, token string) (Session, error)
	ListArchivedMemos(ctx context.Context, db DBTX, arg ListArchivedMemosParams) ([]Memo, error)
	ListAttachments(ctx context.Context, db DBTX, arg ListAttachmentsParams) ([]Attachment, error)
	ListDeletedMemos(ctx context.Context, db DBTX, arg ListDeletedMemosParams) ([]Memo, error)
	ListMemos(ctx context.Context, db DBTX, arg ListMemosParams) ([]Memo, error)
	ListMemosForTags(ctx context.Context, db DBTX, arg ListMemosForTagsParams) ([]ListMemosForTagsRow, error)
	ListMemosForTagsWithSearch(ctx context.Context, db DBTX, arg ListMemosForTagsWithSearchParams) ([]ListMemosForTagsWithSearchRow, error)
	ListMemosWithSearch(ctx context.Context, db DBTX, arg ListMemosWithSearchParams) ([]MemoFTS, error)
	ListTags(ctx context.Context, db DBTX, arg ListTagsParams) ([]Tag, error)
	ReduceTagCount(ctx context.Context, db DBTX, tags []string) error
	SoftDeleteMemo(ctx context.Context, db DBTX, id domain.MemoID) error
	UpdateALocalAuthccount(ctx context.Context, db DBTX, arg UpdateALocalAuthccountParams) error
	UpdateAccount(ctx context.Context, db DBTX, arg UpdateAccountParams) error
	UpdateMemoContent(ctx context.Context, db DBTX, arg UpdateMemoContentParams) (int64, error)
}

var _ Querier = (*Queries)(nil)
