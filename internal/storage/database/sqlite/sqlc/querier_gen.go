// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package sqlc

import (
	"context"

	"github.com/RobinThrift/belt/internal/auth"
	"github.com/RobinThrift/belt/internal/domain"
	"github.com/RobinThrift/belt/internal/storage/database/sqlite/types"
)

type Querier interface {
	CleanupDeletedMemos(ctx context.Context, db DBTX) (int64, error)
	CleanupTagsWithNoCount(ctx context.Context, db DBTX) error
	CleanupeMemoTagConnection(ctx context.Context, db DBTX, arg CleanupeMemoTagConnectionParams) ([]string, error)
	CountAccounts(ctx context.Context, db DBTX) (int64, error)
	CountAttachments(ctx context.Context, db DBTX) (int64, error)
	CreateAPIToken(ctx context.Context, db DBTX, arg CreateAPITokenParams) error
	CreateAccount(ctx context.Context, db DBTX, arg CreateAccountParams) error
	CreateAttachment(ctx context.Context, db DBTX, arg CreateAttachmentParams) (domain.AttachmentID, error)
	CreateJob(ctx context.Context, db DBTX, arg CreateJobParams) error
	CreateLocalAuthAccount(ctx context.Context, db DBTX, arg CreateLocalAuthAccountParams) error
	CreateMemo(ctx context.Context, db DBTX, arg CreateMemoParams) (domain.MemoID, error)
	CreateMemoAttachmentLink(ctx context.Context, db DBTX, arg CreateMemoAttachmentLinkParams) error
	CreateMemoTagConnection(ctx context.Context, db DBTX, arg CreateMemoTagConnectionParams) error
	CreateSession(ctx context.Context, db DBTX, arg CreateSessionParams) error
	CreateTag(ctx context.Context, db DBTX, arg CreateTagParams) error
	DeleteAPIToken(ctx context.Context, db DBTX, arg DeleteAPITokenParams) error
	DeleteAllMemoAttachmentLinks(ctx context.Context, db DBTX, memoID int64) error
	DeleteAttachments(ctx context.Context, db DBTX, ids []domain.AttachmentID) (int64, error)
	DeleteExpired(ctx context.Context, db DBTX) error
	DeleteMemoAttachmentLinks(ctx context.Context, db DBTX, arg DeleteMemoAttachmentLinksParams) error
	DeleteMemoTagConnection(ctx context.Context, db DBTX, memoID int64) ([]string, error)
	DeleteSession(ctx context.Context, db DBTX, token string) error
	GetAPIToken(ctx context.Context, db DBTX, value []byte) (ApiToken, error)
	GetAccount(ctx context.Context, db DBTX, id auth.AccountID) (Account, error)
	GetAccountByRef(ctx context.Context, db DBTX, authRef string) (Account, error)
	GetAccountByUsername(ctx context.Context, db DBTX, username string) (Account, error)
	GetAttachment(ctx context.Context, db DBTX, id domain.AttachmentID) (Attachment, error)
	GetAttachmentByFilepath(ctx context.Context, db DBTX, filepath string) (Attachment, error)
	GetLocalAuthAccountByUsername(ctx context.Context, db DBTX, username string) (LocalAuthAccount, error)
	GetMemo(ctx context.Context, db DBTX, id domain.MemoID) (Memo, error)
	GetNextWakeUpTime(ctx context.Context, db DBTX) (types.SQLiteDatetime, error)
	GetSession(ctx context.Context, db DBTX, token string) (Session, error)
	GetSettings(ctx context.Context, db DBTX, accountID int64) (Setting, error)
	ListAPITokens(ctx context.Context, db DBTX, arg ListAPITokensParams) ([]ApiToken, error)
	ListAttachments(ctx context.Context, db DBTX, arg ListAttachmentsParams) ([]Attachment, error)
	ListAttachmentsForMemo(ctx context.Context, db DBTX, memoID int64) ([]Attachment, error)
	ListMemos(ctx context.Context, db DBTX, arg ListMemosParams) ([]Memo, error)
	ListMemosForTags(ctx context.Context, db DBTX, arg ListMemosForTagsParams) ([]ListMemosForTagsRow, error)
	ListMemosForTagsWithSearch(ctx context.Context, db DBTX, arg ListMemosForTagsWithSearchParams) ([]ListMemosForTagsWithSearchRow, error)
	ListMemosWithSearch(ctx context.Context, db DBTX, arg ListMemosWithSearchParams) ([]MemoFTS, error)
	ListNextJobs(ctx context.Context, db DBTX, scheduledFor string) ([]Job, error)
	ListTags(ctx context.Context, db DBTX, arg ListTagsParams) ([]Tag, error)
	ListUnusedAttachments(ctx context.Context, db DBTX) ([]Attachment, error)
	SetMemoDeletionStatus(ctx context.Context, db DBTX, arg SetMemoDeletionStatusParams) (int64, error)
	SeteMemoArchiveStatus(ctx context.Context, db DBTX, arg SeteMemoArchiveStatusParams) (int64, error)
	UpdateALocalAuthccount(ctx context.Context, db DBTX, arg UpdateALocalAuthccountParams) error
	UpdateAccount(ctx context.Context, db DBTX, arg UpdateAccountParams) error
	UpdateJob(ctx context.Context, db DBTX, arg UpdateJobParams) error
	UpdateMemoContent(ctx context.Context, db DBTX, arg UpdateMemoContentParams) (int64, error)
	UpdateTagCount(ctx context.Context, db DBTX, tags []string) error
	UpsertSetting(ctx context.Context, db DBTX, arg UpsertSettingParams) error
}

var _ Querier = (*Queries)(nil)
