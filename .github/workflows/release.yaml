name: Release

on:
  push:
    tags:
      - 'v*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Build-OCI-Image:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.ref }}

    - uses: RobinThrift/action-setup-just@v1

    - uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64

    - uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64,linux/arm64

    - name: Inspect builder
      run: |
        echo "Name:      ${{ steps.buildx.outputs.name }}"
        echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
        echo "Status:    ${{ steps.buildx.outputs.status }}"
        echo "Flags:     ${{ steps.buildx.outputs.flags }}"
        echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

    - uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: "$"
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Docker Image
      env:
        VERSION: ${{ github.ref_name }}
        DOCKER_EXTRA_ARGS: "--push --cache-from type=gha,scope=stuff --cache-to type=gha,scope=stuff,mode=max"
      run:
        just build-oci-image

  Create-Release:
    needs: [Build-OCI-Image]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: ncipollo/release-action@v1
      with:
        bodyFile: "CHANGELOG/CHANGELOG-${{ github.ref_name }}.md"
        allowUpdates: true


  Build-App-Dmd:
    needs: [Create-Release]

    permissions:
      contents: write

    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'

    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.ref }}

    - uses: RobinThrift/action-setup-just@v1

    - uses: actions/setup-node@v4
      with:
        node-version: "latest"

    - uses: dtolnay/rust-toolchain@stable # Set this to dtolnay/rust-toolchain@nightly
      with:
        # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
        targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

    - uses: swatinem/rust-cache@v2
      with:
        workspaces: "./app/src-tauri -> target"

    - uses: actions/cache@v4
      with:
        path: app/src/external/sqlite-wasm/build
        key: sqlchiper-v4.6.1

    - name: "Build Frontend"
      run: |
        cd app
        just install
        just build

    - uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        projectPath: "./app"
        tauriScript: "just tauri"
        args: ${{ matrix.args }}
        tagName: ${{ github.ref_name }}
        releaseName: "Conveyor ${{ github.ref_name }}"

