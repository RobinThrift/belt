openapi: 3.0.4
info:
  title: Belt Auth API
  description: This is the Belt Auth API.
  version: 0.1.0
servers:
- url: http://localhost:8081/api/auth/v1
  description: Local development server.

security:
  - tokenBearerAuth: []

tags:
- name: Auth
- name: KeyManagment
- name: APITokens

paths:
  /token:
    post:
      operationId: RequestAuthToken
      summary: Request a new AuthToken pair.
      description: Request a new access and refresh token using a supported authentication method.
      tags: [ Auth ]
      requestBody:
        $ref: "#/components/requestBodies/AuthTokenRequest"
      responses:
        "201":
          description: The new access and refresh tokens.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthToken"
        "204":
          description: Password change is required.
          headers:
            Location:
              schema:
                type: string
                example: "/change-password"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "#/components/responses/ErrorUnauthorized"
        "404":
          $ref: "#/components/responses/ErrorNotFound"
        default:
          $ref: "#/components/responses/ErrorOther"

  /change-password:
    post:
      operationId: ChangePassword
      summary: Change acocunt password.
      description: Changes the account password for the provided account.
      tags: [ Auth ]
      requestBody:
        $ref: "#/components/requestBodies/ChangePasswordRequest"
      responses:
        "204":
          description: The password was changed successfully.
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "#/components/responses/ErrorUnauthorized"
        "404":
          $ref: "#/components/responses/ErrorNotFound"
        default:
          $ref: "#/components/responses/ErrorOther"

  /keys:
    post:
      operationId: AddAccountKey
      tags: [ KeyManagment ]
      summary: Add a new account key.
      description: Adds the key to the authenticated accont's list of public keys. If the key already exists, this is a no-op.

      requestBody:
        $ref: "#/components/requestBodies/AddAccountKeyRequest"
      responses:
        "201":
          description: The public was succesfully added.
          content: {}
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "#/components/responses/ErrorUnauthorized"
        "404":
          $ref: "#/components/responses/ErrorNotFound"
        default:
          $ref: "#/components/responses/ErrorOther"

  /keys/{name}:
    parameters:
    - name: name
      in: path
      required: true
      description: Public Key Name
      schema:
        type: string
        example: "primary"

    get:
      operationId: GetAccountKey
      tags: [ KeyManagment ]
      summary: Get a public key by name.
      description: Returns the authenticated account's public key with the given name.

      responses:
        "200":
          description: The public key data.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountKey"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "#/components/responses/ErrorUnauthorized"
        "404":
          $ref: "#/components/responses/ErrorNotFound"
        default:
          $ref: "#/components/responses/ErrorOther"

  /apitokens:
    get:
      parameters:
      - name: page[size]
        in: query
        required: true
        description: Number of API Tokens returned per page.
        schema:
          type: integer
          minimum: 0
          default: 25
          example: 25
          x-go-type: uint64
      - name: page[after]
        in: query
        required: false
        description: Marker from which to start the requested page of API Tokens from.
        schema:
          type: string
          example: "123456"

      operationId: ListAPITokens
      tags: [APITokens]
      summary: List API Tokens paginated
      description: Retrieve a paginated list of API Tokens.

      responses:
        "200":
          description: The pagianted list of API Tokens for the current account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APITokenList"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "#/components/responses/ErrorUnauthorized"
        "404":
          $ref: "#/components/responses/ErrorNotFound"
        default:
          $ref: "#/components/responses/ErrorOther"

    post:
      operationId: CreateAPIToken
      tags: [APITokens]
      summary: Create a new API Token
      description: Create a new named API Token with the specified expiration date.

      requestBody:
        $ref: "#/components/requestBodies/CreateAPITokenRequest"
      responses:
        "201":
          description: The API Token was created succesfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "123215$abekjwe2kj123"
                required:
                - token
                example:
                    token: "123215$abekjwe2kj123"
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "#/components/responses/ErrorUnauthorized"
        "404":
          $ref: "#/components/responses/ErrorNotFound"
        default:
          $ref: "#/components/responses/ErrorOther"

  /apitokens/{name}:
    parameters:
    - name: name
      in: path
      required: true
      description: API Token name
      schema:
        type: string
        example: "test-api-token"

    delete:
      operationId: DeleteAPIToken
      tags: [APITokens]
      summary: Delete API Token
      description: Delete the API Token with the provided name. Subsequent requests with this token will fail. This operation is idempotent, so calls no non-existing Memos will not fail.

      responses:
        "204":
          description: The API Token was deleted successfully.
          content: {}
        "400":
          $ref: "#/components/responses/ErrorBadRequest"
        "401":
          $ref: "#/components/responses/ErrorUnauthorized"
        "404":
          $ref: "#/components/responses/ErrorNotFound"
        default:
          $ref: "#/components/responses/ErrorOther"

  /check-access:
    get:
      operationId: CheckAccess
      summary: Check if the provided access token is valid.
      description: Returns a success response if the current token is valid, otherwise a HTTP error code will be returned.
      tags: [ Auth ]
      parameters:
      - in: header
        name: Authorization
        description: Access bearer token.
        required: true
        schema:
          type: string
          example: "Bearer Bearer 17319685-acb417bbb1db38737881a88"
      responses:
        "204":
          description: The current access token is valid.
          content: {}
        "401":
          $ref: "#/components/responses/ErrorUnauthorized"
        default:
          $ref: "#/components/responses/ErrorOther"


components:
  securitySchemes:
    tokenBearerAuth:
      description: API Token sent as a bearer token in the header. When accessing Belt via the API this is the recommended way to pass along the API Token.
      type: http
      scheme: bearer

  schemas:
    AuthToken:
      type: object
      description: AuthToken is a pair of access and refresh tokens.
      properties:
        accessToken:
          type: string
          example:  "25cb52fb7ecc4703add2a697adf62999"
        expiresAt:
          type: string
          format: date-time
          example: "2024-11-29T13:22:00.000Z"
        refreshToken:
          type: string
          example:  "bba35a92250a4bdc9254ca8c75458374"
        refreshExpiresAt:
          type: string
          format: date-time
          example: "2024-11-29T13:22:00.000Z"
      required:
      -  accessToken
      -  expiresAt
      -  refreshToken
      -  refreshExpiresAt
      example:
        accessToken: "25cb52fb7ecc4703add2a697adf62999"
        expiresAt: "2024-11-29T13:22:00.000Z"
        refreshToken: "bba35a92250a4bdc9254ca8c75458374"
        refreshExpiresAt: "2024-11-29T13:22:00.000Z"

    AccountKey:
      description: An account's public key.
      type: object
      properties:
          name:
            type: string
            example: "primary"
          data:
            type: string
            format: binary
            example: "age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p"
            x-go-type: "[]byte"
          type:
            type: string
            example: "agev1"
      required:
      - name
      - data
      - type
      example:
        name: "primary"
        data: "age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p"
        type: "agev1"

    APIToken:
      type: object
      description: Auth token used to access the API.
      properties:
          name:
            type: string
            example: "test-api-token"
          createdAt:
            type: string
            format: date-time
            example: "2024-11-29T13:22:00.000Z"
          expiresAt:
            type: string
            format: date-time
            example: "2024-11-29T13:22:00.000Z"
      required:
      - name
      - createdAt
      - expiresAt
      example:
        name: test-api-token
        createdAt: "2024-11-29T13:22:00.000Z"
        expiresAt: "2024-11-29T13:22:00.000Z"

    APITokenList:
      type: object
      description: A paginated list of API Tokens.
      properties:
          items:
            type: array
            items:
              $ref: "#/components/schemas/APIToken"
            example:
            - name: test-api-token
              createdAt: "2024-11-29T13:22:00.000Z"
              expiresAt: "2024-11-29T13:22:00.000Z"
          next:
            type: string
            example: "100"
      required:
      - items
      example:
        items:
        - name: test-api-token
          createdAt: "2024-11-29T13:22:00.000Z"
          expiresAt: "2024-11-29T13:22:00.000Z"
        next: "100"

    Error:
      type: object
      description: Follows RFC7807 (https://datatracker.ietf.org/doc/html/rfc7807)
      x-go-type: httperrors.Error
      x-go-type-import:
        path: go.robinthrift.com/belt/internal/x/httperrors
      properties:
        code:
          type: integer
          example: 500
        type:
          type: string
          example: "belt/api/sync/v1/InternalServerError"
        title:
          type: string
          example: "InternalServerError"
        detail:
          type: string
          example: "unknown error"
      required:
      - code
      - type
      - title
      - detail
      example:
        code: 500
        detail: unknown error
        title: InternalServerError
        type: belt/api/sync/v1/InternalServerError

    AuthTokenRequest:
      description: Auth token request union
      oneOf:
      - $ref: "#/components/schemas/AuthTokenRequestPasswordGrant"
      - $ref: "#/components/schemas/AuthTokenRequestRefreshTokenGrant"
      example:
      - grant_type: "refresh_token"
        refresh_token: "b31a861a957d418e8a95fcbed26402ba"
      - grant_type: "password"
        username: "admin"
        password: "passwd"

    AuthTokenRequestPasswordGrant:
      type: object
      description: Request a new auth token using username and password.
      properties:
        grant_type:
          type: string
          enum: [ "password" ]
          example: "password"
        username:
          type: string
          example: "admin"
        password:
          type: string
          example: "passwd"
      required:
      - grant_type
      - username
      - password
      example:
        grant_type: "password"
        username: "admin"
        password: "passwd"


    AuthTokenRequestRefreshTokenGrant:
      type: object
      description: Request a new auth token using a refresh token.
      properties:
        grant_type:
          type: string
          enum: [ "refresh_token" ]
          example: "refresh_token"
        refresh_token:
          type: string
          example: "b31a861a957d418e8a95fcbed26402ba"
      required:
      - grant_type
      - refresh_token
      example:
        grant_type: "refresh_token"
        refresh_token: "b31a861a957d418e8a95fcbed26402ba"

  requestBodies:
    AuthTokenRequest:
      description: Auth token request
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AuthTokenRequest"

    ChangePasswordRequest:
      required: true
      description: "Request data for a password change"
      content:
        application/json:
          schema:
            type: object
            description: "Data for the current and new password"
            properties:
              username:
                type: string
                example: "admin"
              currentPassword:
                type: string
                example: "123456"
              newPassword:
                type: string
                example: "98875"
              newPasswordRepeat:
                type: string
                example: "98875"
            required:
            - username
            - currentPassword
            - newPassword
            - newPasswordRepeat
            example:
              username: "admin"
              currentPassword: "passwd"
              newPassword: "1235"
              newPasswordRepeat: "1235"

    AddAccountKeyRequest:
      description: Requests to add a new public key.
      required: true
      content:
        application/json:
          schema:
            type: object
            description: The public key name, type and data.
            properties:
                name:
                  type: string
                  example: "primary"
                data:
                  type: string
                  format: binary
                  example: "age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p"
                  x-go-type: "[]byte"
                type:
                  type: string
                  example: "agev1"
            required:
            - name
            - data
            - type
            example:
              name: "primary"
              data: "age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p"
              type: "agev1"

    CreateAPITokenRequest:
      description: Create a new named API Token.
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: "test-api-token"
              expiresAt:
                type: string
                format: date-time
                example: "2024-11-29T13:32:25Z"
            required:
            - name
            - expiresAt
            example:
              name: "test-api-token"
              expiresAt: "2024-11-29T13:32:25Z"


  responses:
    ErrorBadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 400
            detail: Invalid request body
            title: Bad Request
            type: belt/api/sync/v1/BadRequest
    ErrorUnauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 401
            detail: You lack the required permissions to perform this action
            title: Unauthorized
            type: belt/api/sync/v1/Unauthorized
    ErrorNotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 404
            detail: The requested page could not be found
            title: Not Found
            type: belt/api/sync/v1/NotFound
    ErrorOther:
      description: Other errors
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

