biome_reporter := if env_var_or_default("BIOME_REPORTER", "") != "" { "--reporter="+env("BIOME_REPORTER") } else { "" }

local_bin := absolute_path("./node_modules/.bin")

serve *args="": _generate-icons
    {{ local_bin }}/vite --mode development --strictPort --port 6155 {{ args }}

build: install
    {{ local_bin }}/vite build --mode production
    just _generate-icons

watch mode="development": 
    {{ local_bin }}/vite build --mode {{ mode }} --watch

storybook *flags="": _generate-icons
    -rm -rf .storybook/public/
    {{ local_bin }}/msw init --save false .storybook/public/
    {{ local_bin }}/storybook dev --no-open {{ flags }}

fmt: install
    {{ local_bin }}/biome format --write ./src

lint: install
    {{ local_bin }}/biome check --write {{ biome_reporter }} ./src
    {{ local_bin }}/tsc --noEmit

typecheck: install
    {{ local_bin }}/tsc --noEmit --incremental false

typecheck-watch: install
    {{ local_bin }}/tsc --noEmit --watch

_generate-icons:
    -mkdir build
    -rm -rf build/icons
    cp -r public/icons build/icons
    for icon in ./build/icons/*/icon.svg; do {{ local_bin }}/pwa-assets-generator --preset minimal-2023 "$icon"; done
    

install:
    if [ ! -d node_modules/.bin ] || [ package.json -nt package-lock.json ]; then npm ci --no-audit --no-fund --install-links=false ; fi
    @echo "TypeScript:" $({{ local_bin }}/tsc --version)
    @echo "Biome:" $({{ local_bin }}/biome --version)

clean:
    rm -rf build build node_modules

